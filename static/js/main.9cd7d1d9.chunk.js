(this["webpackJsonpmarkdown-previewer"]=this["webpackJsonpmarkdown-previewer"]||[]).push([[0],{14:function(e,t,r){},15:function(e,t,r){},16:function(e,t,r){"use strict";r.r(t);var a=r(0),n=r.n(a),i=r(4),o=r.n(i),l=(r(14),r(5)),s=r(6),c=r(1),u=r(8),d=r(7),h=(r(15),function(e){Object(u.a)(a,e);var t=Object(d.a)(a);function a(e){var n;Object(l.a)(this,a);var i=r(3);i.setOptions({gfm:!0,breaks:!0});var o="An H1 Header\r====================\r# This is also an H1\rAn H2 Header\r---------------------\r## This is also an H2\r\rA regular paragraph without styling.\r### An H3 Header\r\r> This is the first level of quoting.\r>\r>> This is nested blockquote.\r>\r> Back to the first level.\r\rHow to format **bold** words.\rAnother way to _emphasize_.\r*   An.\r*   Unordered.\r*   List.\r\r1. An.\r2. Ordered.\r3. List.\r\rThis is [an example](http://example.com/ \"Title\") inline link.\r\rUse the `printf()` function.\r\rNow for some multi line coding: \r```\rfunction anotherExample(firstLine, lastLine) {\rif (firstLine == '```' && lastLine == '```') {\rreturn multiLineCode;\r}\r}\r```\r`const marked=require('marked'); input: this.defaultText; `\r\r![react photo](/react.jpg \"React Photo\")\r";return(n=t.call(this,e)).state={input:o,output:i(o)},n.handleEditorChange=n.handleEditorChange.bind(Object(c.a)(n)),n.handleClearClick=n.handleClearClick.bind(Object(c.a)(n)),n}return Object(s.a)(a,[{key:"handleEditorChange",value:function(e){var t=r(3);t.setOptions({breaks:!0,gfm:!0}),this.setState({input:e.target.value,output:t(e.target.value)})}},{key:"handleClearClick",value:function(e){this.setState({input:this.defaultText})}},{key:"render",value:function(){return n.a.createElement("div",{className:"App"},n.a.createElement("header",{className:"App-header"},n.a.createElement("p",null,"Turn Markdown into HTML")),n.a.createElement("section",{className:"display"},n.a.createElement("form",{className:"input"},n.a.createElement("label",{htmlFor:"text-editor"},"Preview Your Own Markdown Text!"),n.a.createElement("textarea",{id:"editor",type:"text",value:this.state.input,onChange:this.handleEditorChange,name:"text-editor",cols:"40",rows:"80",placeholder:this.state.output}),n.a.createElement("button",{type:"clear",value:"clear",className:"clearButton",onClick:this.handleClearClick},"Clear")),n.a.createElement("div",{className:"output"},n.a.createElement("label",{htmlFor:"text-preview"},"Translated into HTML:"),n.a.createElement("div",{id:"preview",dangerouslySetInnerHTML:{__html:this.state.output}}))))}}]),a}(n.a.Component));Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(n.a.createElement(n.a.StrictMode,null,n.a.createElement(h,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))},9:function(e,t,r){e.exports=r(16)}},[[9,1,2]]]);
//# sourceMappingURL=main.9cd7d1d9.chunk.js.map